	processor    6502
    org    $0810

             lda #$00				;load acc with 0
             tax					;stor value in acc to x
             tay					;store value in acc to y
             jsr $1000				;initialize the music
             sei					;prevent sys CPU interrupts/enable maskable interrups irq
             lda #$7f				;
             sta $dc0d				;turn off cia 1 which can be generated by the CIA chips
             sta $dd0d				;the kernal uses an interrupt to flash the cursor and scan the keyboard
             
			 lda #$01				;
             sta $d01a				;gernate the interrupt by turning on raster interrupts
             
			 lda #$1b				
			 ldx #$08
             ldy #$14
             sta $d011				;clear high bit of $d012 set text mode
             stx $d016				;single colour
             sty $d014				;screen at $0400, charset at $2000
             lda #<irq				;low part of address of interrupt handler
             ldx #>irq				;high part of the address of interrupt handler
             ldy #$7e				;line to trigger interrupt
             sta $0314				;store interrupt vector
             stx $0315				;store interrupt vector
             sty $d012				
             lda $dc0d				;ack cia 1 interrupt
             lda $dd0d				;ack cia 2 interrupt
             asl $d019				;ack vic interrupt
			 cli
			
			jsr setup
			jsr clr_screen
			jsr writemsg
			
mainloop:	lda $d012		;load the current position of the raster
			cmp #$38		;the raster trigger point on the screen
			bne mainloop
			jmp mainloop
;==================================================
; set up the screen
;==================================================
setup		lda #$00		;black colour
			sta $d020		;border
			sta $d021		;background
			
			lda #$18		;$2000 character set
			sta $d018		;
			rts
			
;==================================================
; increment border
;==================================================
incborder	inc $d020		;inc the border colour
			dec $d020		;dec the border colour
			rts

;==================================================
; write text to screen
;==================================================
writemsg	ldx #$00
writechar	lda message,x
			sta $0400,x
			inx
			cpx #$27
			bne writechar
			rts

;==================================================
; check for space bar to be pressed
;==================================================
check_keys	lda $dc01		;read keyboard buffer
			cmp #$ef		;compare with space bar
			beq exit		;if equal then jmp exit
			rts

;==================================================
; colourwash the text
;==================================================
colourwash	lda colour+$00
			sta colour+$27
			lda #$00
cycle		lda colour+$01,x
			sta colour+$00,x
			lda colour,x
			sta $d800,x
			inx
			cpx #$27
			bne cycle
			rts
			
;==================================================
; clear screen
;==================================================
clr_screen	jsr $e544		;clear screen routine
			rts

;==================================================
; exit
;==================================================
exit		brk				;exit to cbm os
		  
;==================================================
; data
;==================================================
message
	.byte "  .-= CYNIC / BLACK ART CORPORATION =-."
	.byte 0
	
colour       .BYTE $09,$09,$02,$02,$08 
             .BYTE $08,$0A,$0A,$0F,$0F 
             .BYTE $07,$07,$01,$01,$01 
             .BYTE $01,$01,$01,$01,$01 
             .BYTE $01,$01,$01,$01,$01 
             .BYTE $01,$01,$01,$07,$07 
             .BYTE $0F,$0F,$0A,$0A,$08 
             .BYTE $08,$02,$02,$09,$09 
             .BYTE $00,$00,$00,$00,$00
		
irq:    jsr $1006					;play music
		jsr colourwash
		jsr check_keys
        asl $d019					;"Acknowledge" the interrupt by clearing the VIC's interrupt flag.
        jmp    $ea31				;jump to the beginning KERNAL's standard interrupt service routine.

 org $1000-$7e
 INCBIN "music.sid"
 
 org $1ffe
 INCBIN "scrap_writer_iii_17.64c"